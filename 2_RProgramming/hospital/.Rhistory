setwd("~/Documents/r_code")
source("complete.R")
complete("specdata",1)
fpath<-file.path("specdata","001.csv")
data<-read.csv(fpath)
both<-ifelse(data$sulfate!=NA && data$nitrate!=NA,1,0)
both
ifelse((data$sulfate!="NA",1,0)
ifelse((data$sulfate!="NA"),1,0)
ifelse((data$sulfate!="NA" && data$nitrate!="NA"),1,0)
data$sulfate
data$sulfate!="NA"
data$sulfate!="NA" && data$nitrate > 0
data$sulfate >0 && data$nitrate > 0
data$sulfate >0
sul<-data$sulphate != "NA"
sul
sul
data$sulphate != "NA"
data$sulphate!="NA"
ifelse(data$sulfate!="NA",1,0)
ifelse(data$sulfate!="NA",0,1)
is.number(data$sulfate)
?is
is.numeric(data$sulfate)
apply(data$sulfate,is.numeric)
apply(data$sulfate,isnumeric)
lapply(data$sulfate,isnumeric)
?apply
apply(data,2,is.numeric)
apply(data$sulfate,1,is.numeric)
apply(data$sulfate,2,is.numeric)
?rapply
rapply(data$sulfate,is.numeric)
?lapply
lapply(data$sulfate,is.numeric)
unlist(lapply(data$sulfate,is.numeric))
?is
unlist(lapply(data$sulfate,invalid))
unlist(lapply(data$sulfate,is.na))
a<-unlist(lapply(data$sulfate,is.na))
b<-unlist(lapply(data$nitrate,is.na))
a == b
h<-a==b
sum(h)
sum(h,na.rm=TRUE)
h
sum(h,na.rm=FALSE)
length(h)
table(h)
table(data)
b
table(b)
table(a)
table(a==b)
length(a)
length(b)
data$sulfate == data$nitrate
yo<-data$sulfate == data$nitrate
table(yo)
fpath<-file.path("specdata","002.csv")
data<-read.csv(fpath)
yo<-data$sulfate == data$nitrate
table(yo)
source("complete.R")
complete("specdata",2)
ifelse(data$sulfate==data$nitrate,0,1)
complete("specdata",2)
source("complete.R")
complete("specdata",2)
complete("specdata",30:25)
complete("specdata",c(2,4,8,10,12))
library(KernSmooth.R)
install.packages("KernSmooth")
?kernsmooth
?KernSmooth
sessionInfo()
use(kernsmooth)
library(kernsmooth)
library(KernSmooth)
source('~/Documents/r_code/crazy.R', echo=TRUE)
crazy()
x
x<-0
crazy()
x
source('~/Documents/r_code/cachemean.R', echo=TRUE)
source('~/Documents/r_code/crazy.R', echo=TRUE)
a<-crazy(c(1,2,3,4))
crazy
source('~/Documents/r_code/crazy.R', echo=TRUE)
a<-crazy(c(1,2,3,4))
crazy()
a<-makeVector(c(1,2,3,4))
a$get()
a$getmean()
cachemean(a)
a$getmean()
cachemean(a)
source('~/Documents/r_code/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
setwd("~/Documents/r_code/ProgrammingAssignment2")
?inv
source('~/Documents/r_code/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
amatrix<-makeCacheMatrix(matrix(c(1,2,3,4), nrom=2,ncol=2))
amatrix$get()
amatrix$get
amatrix$get
amatrix$get
amatrix$getinverse
source('~/Documents/r_code/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
amatrix$getinverse
source('~/Documents/r_code/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
amatrix<-makeCacheMatrix(matrix(c(1,2,3,4), nrom=2,ncol=2))
amatrix
amatrix$get
amatrix$get()
amatrix<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2,ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse()
cacheSolve(amatrix)
amatrix$set(matrix(c(0,5,99,66), nrow=2,ncol=2))
cacheSolve(amatrix)
amatrix$get()
amatrix$getinverse()
source('~/Documents/r_code/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
amatrix<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2,ncol=2))
amatrix$get()
cacheSolve(amatrix)
cacheSolve(amatrix)
amatrix$getinverse()
amatrix$setinverse()
source('~/Documents/r_code/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
amatrix$setinverse()
source('~/Documents/r_code/ProgrammingAssignment2/cachematrix.R', echo=TRUE)
setwd("~/Documents/r_code")
library(datasets)
data(iris)
?iris
iris$Sepal.Length
mean(iris$Sepal.Length)
colMean(iris)
apply(iris,1,mean)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
tapply(mtcars$cyl,mtcars$mpg,mean)
lapply(mtcars,mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
split(mtcars,mtcars$cyl)
split(mtcars$mpg,mtcars$cyl)
sapply(split(mtcars$hp,mtcars$cyl),mean)
209.21429-82.63636
subset(mtcars,mtcars$cyl=4)
subset(mtcars,mtcars$cyl==4)
cyl4<-subset(mtcars,mtcars$cyl==4)
mean(cyl4$hp)
debug(ls)
ls
iris
lapply(split(iris$Species),mean)
lapply(split(iris$Species,iris$Sepal.Length),mean)
split(iris$Species,iris$Sepal.Length)
View(iris)
View(iris)
split(iris$Sepal.Length,$iris$Species)
split(iris$Sepal.Length,iris$Species)
lapply(split(iris$Sepal.Length,iris$Species),mean)
with(mtcars, tapply(mpg,cyl,mean))
set.seed(1)
rpois(5,2)
?rnorm
?rnorm
?qnorm
?dnorm
?ppois
set.seed(10)
x<-rbinom(10,10,0.5)
x
e<-rnorm(10,0,20)
y<-0.5+2*x+e
y
library(datasets)
Rprof()
fit<-lm(y~x1+x2)
system.time()
system.time(1)
system.time(3)
system.time()
debug(ls)
debug(ls,on=FALSE)
undebug(ls)
ls
ls
isdebugged(ls)
ls
summary(is.na(data$Sulfate))
(is.na(data$Sulfate)
)
is.na(data$Sulfate)
data$Sulfate
summary(data$sulfate)
mean(data[!is.na(data$sulfate)])
mean(data[,!is.na(data$sulfate)])
mean(data[!is.na(data$sulfate),])
data[!is.na(data$sulfate)]
data[!is.na(data$sulfate),]
zp<-data[!is.na(data$sulfate),]
head(zp)
mean(data$sulfate)
mean(zp$sulfate)
summary(is.na(data$Sulfate))
summary(data$sulfate)
unique(data$sulfate)
plot(x,y)
set.seed(1)
sample(1:10000,100)
summary(sample(1:10000,100))
summary(sample(1:10,100))
summary(sample(1:10,100,replace=TRUE))
?lm
source('~/Documents/r_code/polmean2.R', echo=TRUE)
polmean2("specdata",nitrate)
source('~/Documents/r_code/polmean2.R', echo=TRUE)
polmean2("specdata",nitrate)
source(pollutantmean.R)
source("pollutantmean.R")
pollutantmean("specdata",sulfate)
pollutantmean("specdata","sulfate")
pollutantmean("specdata","nitrate")
setwd("~/Documents/r_code/hospital")
source('~/Documents/r_code/hospital/rankall.R', echo=TRUE)
rankall("heart attack",20)
